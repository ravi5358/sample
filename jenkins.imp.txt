1. jenkins master slave configuration
2. with out master we can work on slave
3. upstream and downstream configuration
where we are changing the port /etc/sysconfig/jenkins   --in jenkins
default port is 8080

nexus port 8081
$NEXUS_HOME/conf/nexus

/var/lib/jenkins/secrets/initialAdminPassword


https://www.youtube.com/watch?v=eXZ4uidLQUU

https://www.youtube.com/watch?v=nZSdwTugVqo


Master n slave:-
----------------
To reduce the load  
Master is our current mechine

Jenkins works on the basis of a distributed architecture called the master-slave architecture. 
Jenkins has a master server who is responsible to pull the code every time there is a commit from the source code repository. 
Using the TCP/IP protocol, Jenkins master assigns the work load to each of its slaves.

Jenkins supports the master-slave architecture, i.e. many slaves work for a master. It is also known as Jenkins Distributed Builds. 
It also allows you to run jobs on different environments like Linux, Windows, MacOS, etc.

Slaves can run on a variety of operating systems. The job of a Slave is to do as they are told to, which involves executing build jobs dispatched by the Master.

Executers:- to run at a time 2 executers, at a time to run jenkins job

set the path manage jenkis ---> Global tool configuration


find / -name javac

find /usr/lib/jvm/java-1.8* | head -n 3


Build periodically
poll scm

github hook trigger for gitscm polling

Build after other projects are build


build shell we nee to write


Maven installation
----------------------
https://maven.apache.org/download.cgi

cd /opt

wget http://apachemirror.wuchna.com/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz

M2=$M2_HOME/bin


https:/github.com/arsr319/maven-hello-world.git

[root@ip-172-31-80-100 ~]# cat .bash_profile
# .bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
        . ~/.bashrc
fi

# User specific environment and startup programs

JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.232.b09-2.el8_1.x86_64
M2_HOME=/opt/apache-maven-3.6.3
M2=$M2_HOME/bin
PATH=$PATH:$JAVA_HOME:$M2_HOME:$M2:$HOME/bin
#PATH=$PATH:$HOME/bin

export PATH

maven invoker plugin:-The Invoker Plugin is used to run a set of Maven projects. The plugin can determine whether each project execution is successful, 
and optionally can verify the output generated from a given project execution. 
This plugin is in particular handy to perform integration tests for other Maven plugins
and git

==================================================================================================
Open Jenkins server, go to >> New Item As i want to work with Maven Project but i cant find 'maven project' option available there.

?To add Maven Project in New Item Page,

just go to Manage Jenkins >> Manage Plugin,

click on Available Tab,

In the filter box enter "Maven plugin" and you will get search result as "Unleash Maven Plugin",

v enable the check-box, click on "Download now and install after restart"

Below screenshot will help you more-

Unleash Maven Plugin
This plugin provides a generic alternative to the error-prone default release plugin provided by Maven. 
It is designed to require a minimal effort of work for releasing modules and being extensible to integrate in every project setup. License.


output of files storing path

/var/lib/jenkins/workspace/maven-helloworld/target


master and slave configuration

https://github.com/miztiik/DevOps-Demos/tree/master/setup-jenkins-slave


next in job click on Restrict where this project can be run

output path of slave /home/jenkins-slave-01/workspace
================================================================================================================
what is upstream and downstream

Upstream:-
---------------
A project can have one or several upstream projects, Which means that a build for the current project may be scheduled when an upstream build is finished. per default every 
stable upstream build will schedule a build in the downstream project, but is finished. per default every stable 
upstream build will schedule a build in the downstream project, but there are several options and plugins which can
customize this behaviour.

Downstream project
--------------------
A project can have one or serveral downstream projects. the current project is then know
as an upstream project of the downstream project.







